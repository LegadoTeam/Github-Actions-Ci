name: Build SonoBus Windows

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Custom release tag for GitHub Release'
        required: true
        default: 'v1.7.2'
      release_name:
        description: 'Release display name'
        required: false
        default: 'SonoBus Windows Release'
      aax_sdk_path:
        description: 'Path to AAX SDK (relative to repo root)'
        required: false
        default: './SDK/aax'

jobs:
  build-windows:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@amin

      - name: Clone private source repository
        run: |
          git clone --recurse-submodules https://x-access-token:${{ secrets.TOKEN_MGZ }}@github.com/mgz0227/sonobus.git
          cd sonobus
          git checkout main

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y mingw-w64 cmake

      - name: Build Windows version
        run: |
          cd sonobus
          mkdir -p build
          cd build

          DEPS=""
          if [ -d "${{ github.event.inputs.aax_sdk_path }}" ]; then
            echo "Using AAX SDK at ${{ github.event.inputs.aax_sdk_path }}"
            DEPS="-DAAX_SDK_PATH=${{ github.event.inputs.aax_sdk_path }}"
          else
            echo "Warning: AAX SDK path not found, skipping AAX build"
          fi

          cmake .. \
            -DCMAKE_SYSTEM_NAME=Windows \
            -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
            -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ \
            -DCMAKE_INSTALL_PREFIX=build/SonoBus_artefacts/Release \
            $DEPS

          cmake --build . --config Release
          cmake --install .

      - name: Upload Windows artifacts to Release
        uses: softprops/action-gh-release@master
        continue-on-error: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_MGZ }}
        with:
          files: sonobus/build/SonoBus_artefacts/Release/**
          name: ${{ github.event.inputs.release_name }}
          tag_name: ${{ github.event.inputs.release_tag }}

